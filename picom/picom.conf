# picom configuration file
# Using pijulius' picom
# References:
# - <https://github.com/pijulius/picom/blob/next/picom.sample.conf>
# - <https://github.com/pijulius/picom/blob/next/picom.pijulius.conf>
# - <https://raw.githubusercontent.com/yshui/picom/next/picom.sample.conf>
# - (legacy) <https://raw.githubusercontent.com/jonaburg/picom/next/picom.sample.conf>

# General
dbus = true
backend = "glx"
# Tests show a 15% performance boost. Recommended.
glx-no-stencil = true
# Recommended if it works.
glx-no-rebind-pixmap = true
# Recommended disabling as enabling it causes performance degradation.
# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true
dithered-present = false
vsync = true
# Detect rounded corners and treat them as rectangular when shadow-ignore-shaped is enabled
detect-rounded-corners = true
detect-client-opacity = true
# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows.
unredir-if-possible = true
unredir-if-possible-delay = 0
# unredir-if-possible-exclude = []
detect-transient = true
detect-client-leader = true
use-damage = true
# use EWMH to detect fullscreen windows.
no-ewmh-fullscreen = false
# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = false
transparent-clipping = false
log-level = "warn"

# Transparency
inactive-opacity = 0.7
frame-opacity = 0.95
frame-opacity-for-same-colors = false
inactive-opacity-override = true
active-opacity = 1.0
inactive-dim = 0.02
opacity-rule = [
    "100:class_g = 'firefox' && argb",
    "90:class_g = 'kitty'",
    "70:class_g = 'Rofi'",
    "100:class_g = 'Polybar'",
    "100:class_g = 'slop'",
    "100:class_g = 'flameshot'",
]
focus-exclude = [
    "class_g = 'firefox' && argb",
    "class_g *= 'flameshot'",
    "class_g = 'Rofi'",
    "class_g = 'slop'",
    "class_g = 'Conky'",
    "class_g = 'Dunst'",
    "class_g = 'Polybar'",
    "class_g = 'Gcr-prompter'",
    "name = 'Notification'",
    "class_g ?= 'Notify-osd'",
    "class_g = 'Cairo-clock'",
]

# Blur
blur-method = "dual_kawase"
blur-background = true
blur-background-frame = true
blur-background-fixed = false
blur-kern = "7x7box"
blur-size = 5
blur-strength = 5
blur-background-exclude = [
    "class_g = 'firefox' && argb",
    "class_g *= 'flameshot'",
    "class_g *?= 'slop'",
    "class_g = 'Peek'",
    "window_type = 'desktop'",
    "window_type = 'dock'",
    "class_g = 'eww-bar'",
    "class_g = 'eww-left'",
    "class_g = 'eww-top'",
    "class_g = 'eww-filler'",
    "name = 'Notification'",
]

# Shadow
shadow = true
shadow-radius = 12
shadow-opacity = .60
shadow-offset-x = -12
shadow-offset-y = -12
shadow-color = "#000000"
crop-shadow-to-monitor = true
crop-shadow-to-monitor = true
# Avoid Drawing shadow on all shaped windows
shadow-ignore-shaped = false
shadow-exclude = [
    "class_g = 'firefox' && argb",
    "class_g *= 'flameshot'",
    "class_g = 'Conky'",
    "class_g = 'Rofi'",
    "class_g = 'Polybar'",
    "class_g = 'jgmenu'",
    "window_type = 'desktop'",
    "window_type = 'dock'",
    "class_g = 'Cairo-clock'",
    "class_g *?= 'slop'",
    "class_g *= 'Wine'",
    "class_g = 'eww-left'",
    "class_g = 'eww-top'",
    "class_g = 'eww-filler'",
    "name = 'Notification'",
    "class_g ?= 'Notify-osd'",
]

# Fading
fading = true
fade-in-step = 0.04
fade-out-step = 0.04
fade-delta = 10
no-fading-openclose = false
no-fading-destroyed-argb = true

# Corners
corner-radius = 0

# Animations
animations = ({
    triggers = ["close", "hide"];
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "window-raw-opacity-before";
        end = "window-raw-opacity";
    };
    blur-opacity = "0";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height * 5";
    scale-x = {
        curve = "cubic-bezier(0.21, 0.02, 0.76, 0.36)";
        duration = 0.15;
        start = 1;
        end = 0.9;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
}, {
    triggers = ["open", "show"];
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "window-raw-opacity-before";
        end = "window-raw-opacity";
    };
    blur-opacity = {
        curve = "linear";
        duration = 0.1;
        delay = 0.15;
        start = "window-raw-opacity-before";
        end = "window-raw-opacity";
    };
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height * 5";
    scale-x = {
        curve = "cubic-bezier(0.24, 0.64, 0.79, 0.98)";
        duration = 0.15;
        start = 0.95;
        end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
}, {
    triggers = ["workspace-out"];
    offset-y = {
        curve = "cubic-bezier(0.21, 0.02, 0.76, 0.36)";
        duration = 0.15;
        start = "0";
        end = "- window-height / 2";
    };
    shadow-offset-y = "offset-y";
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "window-raw-opacity-before";
        end = "window-raw-opacity";
    };
    blur-opacity = "0";
    shadow-opacity = "opacity";
}, {
    triggers = ["workspace-out-inverse"];
    offset-y = {
        curve = "cubic-bezier(0.21, 0.02, 0.76, 0.36)";
        duration = 0.15;
        start = "0";
        end = "window-height / 2";
    };
    shadow-offset-y = "offset-y";
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "window-raw-opacity-before";
        end = "window-raw-opacity";
    };
    blur-opacity = "0";
    shadow-opacity = "opacity";
}, {
    triggers = ["workspace-in"];
    offset-y = {
        curve = "cubic-bezier(0.24, 0.64, 0.79, 0.98)";
        duration = 0.15;
        start = "window-height / 2";
        end = "0";
    };
    shadow-offset-y = "offset-y";
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "0";
        end = "window-raw-opacity";
    };
    blur-opacity = {
        curve = "linear";
        duration = 0.1;
        delay = 0.15;
        start = "0";
        end = "window-raw-opacity";
    };
    shadow-opacity = "opacity";
}, {
    triggers = ["workspace-in-inverse"];
    offset-y = {
        curve = "cubic-bezier(0.24, 0.64, 0.79, 0.98)";
        duration = 0.15;
        start = "- window-height / 2";
        end = "0";
    };
    shadow-offset-y = "offset-y";
    opacity = {
        curve = "linear";
        duration = 0.15;
        start = "0";
        end = "window-raw-opacity";
    };
    blur-opacity = {
        curve = "linear";
        duration = 0.1;
        delay = 0.15;
        start = "0";
        end = "window-raw-opacity";
    };
    shadow-opacity = "opacity";
}, {
    triggers = [ "geometry" ];
    preset = "geometry-change";
})

wintypes: {
    menu = { shadow = false; full-shadow = false; blur-background = false; };
};
